// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AboutFlower /> is renders AboutFlower correctly 1`] = `
<View>
  <Text>
    ???
  </Text>
</View>
`;

exports[`<Homepage /> is renders Homepage correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#385659",
      "flex": 1,
    }
  }
>
  <View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#e6e7e8",
          "borderRadius": 10,
          "margin": 40,
          "opacity": 1,
          "padding": 20,
          "textAlign": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#385659",
            "fontSize": 20,
            "fontWeight": "700",
            "textAlign": "center",
          }
        }
      >
        Take a picture
      </Text>
    </View>
    <Text
      style={
        Object {
          "color": "#e6e7e8",
          "fontSize": 24,
          "fontWeight": "700",
          "textAlign": "center",
        }
      }
    >
      or
    </Text>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#e6e7e8",
          "borderRadius": 10,
          "margin": 40,
          "opacity": 1,
          "padding": 20,
          "textAlign": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#385659",
            "fontSize": 20,
            "fontWeight": "700",
            "textAlign": "center",
          }
        }
      >
        Upload an image
      </Text>
    </View>
  </View>
</View>
`;

exports[`<PredictFromCamera /> is renders PredictFromCamera correctly 1`] = `
<View>
  <Text>
    ???
  </Text>
</View>
`;

exports[`<PredictionResult /> is renders PredictionResult correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#182d2e",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <Image
    source={
      Object {
        "uri": Object {},
      }
    }
    style={
      Object {
        "height": 250,
        "marginBottom": 20,
        "width": 250,
      }
    }
  />
  <Text
    style={
      Object {
        "color": "#e6e7e8",
        "fontSize": 16,
        "fontWeight": "700",
        "textAlign": "center",
      }
    }
  >
     
    AI says: 
  </Text>
  <View>
    <Text
      style={
        Object {
          "color": "#b6d2d0",
          "fontSize": 32,
          "fontWeight": "700",
          "textAlign": "center",
        }
      }
    >
      
    </Text>
  </View>
  <Text
    style={
      Object {
        "color": "#e6e7e8",
        "fontSize": 16,
        "fontWeight": "700",
        "textAlign": "center",
      }
    }
  >
     
    Probability: 
  </Text>
  <Text
    style={
      Object {
        "color": "#b6d2d0",
        "fontSize": 32,
        "fontWeight": "700",
        "textAlign": "center",
      }
    }
  >
    0
  </Text>
  <View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#e6e7e8",
          "borderRadius": 10,
          "margin": 10,
          "opacity": 1,
          "padding": 16,
          "textAlign": "center",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#e6e7e8",
              "fontSize": 16,
              "fontWeight": "700",
              "textAlign": "center",
            },
            Object {
              "color": "#182d2e",
            },
          ]
        }
      >
        Check again
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#e6e7e8",
          "borderRadius": 10,
          "margin": 10,
          "opacity": 1,
          "padding": 16,
          "textAlign": "center",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#e6e7e8",
              "fontSize": 16,
              "fontWeight": "700",
              "textAlign": "center",
            },
            Object {
              "color": "#182d2e",
            },
          ]
        }
      >
        More informations
      </Text>
    </View>
  </View>
</View>
`;

exports[`<Quiz /> is renders Quiz correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#385659",
      "flex": 1,
      "justifyContent": "center",
      "paddingHorizontal": 20,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#e6e7e8",
        "fontSize": 25,
        "fontWeight": "600",
        "letterSpacing": -0.02,
        "textAlign": "center",
      }
    }
  >
    Test your knowledge about flowers
  </Text>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(255, 255, 255, 0.3)",
        "borderRadius": 10,
        "justifyContent": "center",
        "marginTop": 20,
        "opacity": 1,
        "paddingVertical": 15,
        "width": "46%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#fff",
          "fontSize": 20,
          "textAlign": "center",
        }
      }
    >
      Start
    </Text>
  </View>
</View>
`;

exports[`<QuizResult /> is renders QuizResult correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#385659",
      "flex": 1,
      "justifyContent": "center",
      "paddingHorizontal": 20,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#e6e7e8",
        "fontSize": 45,
        "fontWeight": "600",
        "textAlign": "center",
      }
    }
  >
    0
     /
     
    1
  </Text>
  <Text
    style={
      Object {
        "color": "#e6e7e8",
        "fontSize": 45,
        "fontWeight": "600",
        "textAlign": "center",
      }
    }
  >
    Poor!
  </Text>
  <Text
    style={
      Object {
        "color": "#e6e7e8",
        "fontSize": 25,
        "fontWeight": "600",
        "marginTop": 12,
        "textAlign": "center",
      }
    }
  >
    You didn't do great, but don't worry! This quiz was really difficult, but if you deepen your knowledge and try again, you'll definitely do better!
  </Text>
</View>
`;

exports[`<SignUp /> is renders SignUp correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <Text>
    Sign up
  </Text>
  <TextInput
    allowFontScaling={true}
    autoCapitalize="none"
    onChangeText={[Function]}
    placeholder="Username"
    rejectResponderTermination={true}
    style={
      Object {
        "borderColor": "gray",
        "borderWidth": 1,
        "height": 40,
        "marginTop": 8,
        "width": "90%",
      }
    }
    underlineColorAndroid="transparent"
    value=""
  />
  <TextInput
    allowFontScaling={true}
    autoCapitalize="none"
    onChangeText={[Function]}
    placeholder="Email"
    rejectResponderTermination={true}
    style={
      Object {
        "borderColor": "gray",
        "borderWidth": 1,
        "height": 40,
        "marginTop": 8,
        "width": "90%",
      }
    }
    underlineColorAndroid="transparent"
    value=""
  />
  <TextInput
    allowFontScaling={true}
    autoCapitalize="none"
    onChangeText={[Function]}
    placeholder="Password"
    rejectResponderTermination={true}
    secureTextEntry={true}
    style={
      Object {
        "borderColor": "gray",
        "borderWidth": 1,
        "height": 40,
        "marginTop": 8,
        "width": "90%",
      }
    }
    underlineColorAndroid="transparent"
    value=""
  />
  <View
    accessibilityRole="button"
    accessibilityStates={Array []}
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Sign up
      </Text>
    </View>
  </View>
  <View
    accessibilityRole="button"
    accessibilityStates={Array []}
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Already have an account? Log in
      </Text>
    </View>
  </View>
</View>
`;

exports[`<UploadImage /> is renders UploadImage correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#385659",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#e6e7e8",
        "borderRadius": 10,
        "margin": 40,
        "opacity": 1,
        "padding": 20,
        "textAlign": "center",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#385659",
          "fontSize": 20,
          "fontWeight": "700",
          "textAlign": "center",
        }
      }
    >
      Upload an image
    </Text>
  </View>
</View>
`;
